553a554,555
>          crit_gdd1                           =>    veg_vp%crit_gdd1                                  , & ! Input:  [real(r8) (:) ] critical GDD intercept (at t = 0)
>          crit_gdd2                           =>    veg_vp%crit_gdd2                                  , & ! Input:  [real(r8) (:) ] critical GDD slope (funtion of MAT)
555a558
>          t_ref2m                             =>    veg_es%t_ref2m                          , & ! Input:  [real(r8) (:) ]  2 m height surface air temperature (K)
563a567,568
>          onset_chil                          =>    cnstate_vars%onset_chil_patch                         , & 
>          dayl_temp                           =>    cnstate_vars%dayl_temp                         , &
672,673c677,678
<             crit_onset_gdd = exp(4.8_r8 + 0.13_r8*(annavg_t2m(p) - SHR_CONST_TKFRZ))
< 
---
>             crit_onset_gdd = exp(crit_gdd1(ivt(p)) + crit_gdd2(ivt(p))*(annavg_t2m(p) - SHR_CONST_TKFRZ))
>             !crit_onset_gdd = exp(4.8_r8 + 0.13_r8*(annavg_t2m(p) - SHR_CONST_TKFRZ))
769a775,776
>                   onset_chil(p) = 0._r8
>                   dayl_temp(p) = 0._r8
786,788c793,818
<                soilt = t_soisno(c,3)
<                if (onset_gddflag(p) == 1.0_r8 .and. soilt > SHR_CONST_TKFRZ) then
<                   onset_gdd(p) = onset_gdd(p) + (soilt-SHR_CONST_TKFRZ)*fracday
---
>                !soilt = t_soisno(c,3)
>                !if (onset_gddflag(p) == 1.0_r8 .and. soilt > SHR_CONST_TKFRZ) then
>                !   onset_gdd(p) = onset_gdd(p) + (soilt-SHR_CONST_TKFRZ)*fracday
>                if (ivt(p)==3) then!DN (3)
>                  !forcing
>                  if (onset_gddflag(p) == 1.0_r8 .and. t_ref2m(p) > 279.50_r8 .and. ws_flag == 1._r8) then
>                    onset_gdd(p) = onset_gdd(p)+(t_ref2m(p)-279.50_r8)*fracday
>                  end if
>                  !then accumulate chilling days for onset trigger
>                  if (onset_gddflag(p) == 1.0_r8 .and. t_ref2m(p) < 279.50_r8 .and. ws_flag == 1._r8) then
>                    onset_chil(p) = onset_chil(p) + fracday
>                  end if
>                  crit_onset_gdd = 9._r8 +2112._r8 * exp(-0.04_r8 * onset_chil(p))
>                else if (ivt(p)==11) then !SH (11)
>                  if (onset_gddflag(p) == 1.0_r8 .and. t_ref2m(p) > 279.05_r8 .and. ws_flag == 1._r8) then
>                    onset_gdd(p) = onset_gdd(p) +(t_ref2m(p)-279.05_r8)*fracday
>                  end if
>                  if (onset_gddflag(p) == 1.0_r8 .and. t_ref2m(p) < 279.05_r8 .and. ws_flag == 1._r8) then
>                    onset_chil(p) = onset_chil(p) + fracday
>                  end if
>                  crit_onset_gdd = 33._r8 + 1388._r8 * exp(-0.02_r8 * onset_chil(p))
>                else
>                  soilt = t_soisno(c,3)
>                  if (onset_gddflag(p) == 1.0_r8 .and. soilt > SHR_CONST_TKFRZ) then
>                    onset_gdd(p) = onset_gdd(p) + (soilt-SHR_CONST_TKFRZ)*fracday
>                  end if
796a827,828
>                   onset_chil(p) = 0.0_r8
>                   dayl_temp(p) = 0.0_r8
839c871,877
<                if (ws_flag == 0._r8 .and. dayl(g) < crit_dayl) then
---
> 
>               if (ivt(p) == 3) then
>                 if(ws_flag == 0._r8 .and. dayl(g) < 46800.0_r8 .and. t_ref2m(p) < 294.5_r8) then
>                   dayl_temp(p) =dayl_temp(p) + ((294.5_r8 - t_ref2m(p))**2 * (dayl(g)/46800.0_r8 )) * fracday
>                 end if
> 
>                 if(ws_flag == 0._r8 .and. dayl_temp(p)> 1750.0_r8) then
840a879
>                   dayl_temp(p) = 0._r8
844c883,902
<                end if
---
>                 end if
>               else if (ivt(p) == 11) then
>                 if(ws_flag == 0._r8 .and. dayl(g) < 54600.0_r8 .and. t_ref2m(p) < 290.15_r8) then
>                   dayl_temp(p) =dayl_temp(p) +( (290.15_r8 - t_ref2m(p))**2 *(dayl(g)/54600.0_r8))*fracday
>                 end if
>                 if(ws_flag == 0._r8 .and. dayl_temp(p)> 1600.0_r8) then
>                   offset_flag(p) = 1._r8
>                   dayl_temp(p) = 0._r8
>                   offset_counter(p) = ndays_off * secspday
>                   prev_leafc_to_litter(p) = 0._r8
>                   prev_frootc_to_litter(p) = 0._r8
>                 end if
>               else
>                 if (ws_flag == 0._r8 .and. dayl(g) < crit_dayl) then
>                   offset_flag(p) = 1._r8
>                   offset_counter(p) = ndays_off * secspday
>                   prev_leafc_to_litter(p) = 0._r8
>                   prev_frootc_to_litter(p) = 0._r8
>                  end if
>               end if
